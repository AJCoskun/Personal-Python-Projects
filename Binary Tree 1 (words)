
class Node:
    def __init__(self, data):
       self.data = data
       self.__leftChild = None
       self.__rightChild = None


    def search(self, val):
        if val==self.data:
            return str(val)+" is found"
        elif val < self.data:
            if self.__leftChild:
                return self.__leftChild.search(val)
            else:
                return str(val)+" is not found"
        else:
            if self.__rightChild:
                return self.__rightChild.search(val)
            else:
                return str(val)+" is not found"


    # Function to insert in BST
    def insert(self, data):
        # if value is lesser than the value of the parent node
        if data < self.data:
            if self.__leftChild:
                # if we still need to move towards the left subtree
                self.__leftChild.insert(data)
            else:
                self.__leftChild = Node(data)
                return
        # if value is greater than the value of the parent node
        else:
            if self.__rightChild:
                # if we still need to move towards the right subtree
                self.__rightChild.insert(data)
            else:
                self.__rightChild = Node(data)
                return

    # Function to search in BST
    def search(self, val):
        # if value to be searched is found
        if val==self.data:
            return str(val)+" is found in the BST"
        # if value is lesser than the value of the parent node
        elif val < self.data:
            # if we still need to move towards the left subtree
            if self.__leftChild:
                return self.__leftChild.search(val)
            else:
                return str(val)+" is not found in the BST"
        # if value is greater than the value of the parent node
        else:
            # if we still need to move towards the right subtree
            if self.__rightChild:
                return self.__rightChild.search(val)
            else:
                return str(val)+" is not found in the BST"



    def PrintTree(self):
        if self.__leftChild:
            self.__leftChild.PrintTree()
        print( self.data),
        if self.__rightChild:
            self.__rightChild.PrintTree()



# # Creating root node
# root = Node("27")
# # Inserting values in BST
# root.insert("14")
# root.insert("35")
# root.insert("31")
# root.insert("10")
# root.insert("19")
# # searching the values
# print(root.search("7"))
# print(root.search("14"))

# root.PrintTree()

root = Node("Banjo Kazooie")

root.insert("Ni Co")
root.insert("Jesus")
root.insert("Venti")
root.insert("Kirishima")
root.insert("Ganyu")
print(root.search("Jesus"))
print(root.search("Sans"))

root.PrintTree()
